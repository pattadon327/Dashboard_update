services:

  airflow-webserver:
    hostname: airflow
    container_name: airflow-traffic
    build: .
    restart: always
    networks:
      - airflow
    depends_on:
      postgres:
        condition: service_healthy
    environment:   
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      - AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK=true
      - AIRFLOW__WEBSERVER__SECRET_KEY=traffic_monitoring_secret_key
      - AIRFLOW_INIT_DB=true
      - AIRFLOW_CREATE_USER=true
      - AIRFLOW_USERNAME=admin
      - AIRFLOW_PASSWORD=admin
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ../ai-detect-traffic:/opt/airflow/dashboard
      - ./data:/opt/airflow/data
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin || true &&
      airflow webserver --daemon &
      airflow scheduler
      "
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1GB

  postgres:
    hostname: postgres
    container_name: postgres-traffic
    image: 'postgres:13-bullseye'
    environment:
      POSTGRES_USER: 'airflow'
      POSTGRES_PASSWORD: 'airflow'
      POSTGRES_DB: 'airflow'
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - airflow
    restart: on-failure
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 60s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512MB

volumes:
  postgres:

networks:
  airflow:
    driver: bridge
